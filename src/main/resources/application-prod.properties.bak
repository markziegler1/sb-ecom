# Production Configuration for AWS
# spring.profiles.active=prod

# Database Configuration (will be set via environment variables)
spring.datasource.url=jdbc:postgresql://sb-ecom-db.cl2s28msciiv.eu-west-1.rds.amazonaws.com:5432/ecommerce
spring.datasource.username=postgres
spring.datasource.password=8DmWen9OGMSFlPfVZKDkD14wJ
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwtSecret=${JWT_SECRET:your-super-secret-jwt-key-for-production-change-this}
app.jwtExpirationMs=${JWT_EXPIRATION:86400000}

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# CORS Configuration for production
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:https://your-domain.com,https://www.your-domain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.ecommerece.project=INFO
logging.level.org.springframework.security=INFO

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# AWS S3 Configuration (for file uploads)
aws.s3.bucket-name=${S3_BUCKET_NAME:your-ecommerce-bucket}
aws.s3.region=${AWS_REGION:us-east-1}
aws.access.key.id=${AWS_ACCESS_KEY_ID}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY}

# Disable H2 Console in production
spring.h2.console.enabled=false

# Disable data.sql in production
spring.sql.init.mode=never 