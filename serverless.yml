service: sb-ecom-serverless

frameworkVersion: '3'

provider:
  name: aws
  runtime: java21
  region: us-east-1
  memorySize: 512
  timeout: 30
  environment:
    SPRING_PROFILES_ACTIVE: aws
    DYNAMODB_TABLE: ${self:service}-table
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  api:
    handler: com.ecommerece.project.ServerlessHandler::handleRequest
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    environment:
      DYNAMODB_TABLE: ${self:provider.environment.DYNAMODB_TABLE}

resources:
  Resources:
    # DynamoDB Table
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: category-index
            KeySchema:
              - AttributeName: category
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            AttributeDefinitions:
              - AttributeName: category
                AttributeType: S

    # S3 Bucket for Frontend
    FrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ecom-frontend-${self:service}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    # CloudFront Distribution
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - Id: S3Origin
              DomainName: !GetAtt FrontendBucket.RegionalDomainName
              S3OriginConfig:
                OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
            - Id: ApiGatewayOrigin
              DomainName: !Sub '${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com'
              CustomOriginConfig:
                HTTPPort: 443
                OriginProtocolPolicy: https-only
          Enabled: true
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingOptimized
          CacheBehaviors:
            - PathPattern: /api/*
              TargetOriginId: ApiGatewayOrigin
              ViewerProtocolPolicy: https-only
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          Aliases:
            - ecom.com
            - www.ecom.com

    # CloudFront Origin Access Identity
    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Sub '${AWS::StackName} Origin Access Identity'

    # S3 Bucket Policy
    FrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref FrontendBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'
              Action: s3:GetObject
              Resource: !Sub '${FrontendBucket}/*'

  Outputs:
    ApiGatewayUrl:
      Description: "API Gateway endpoint URL"
      Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${sls:stage}"
    
    CloudFrontUrl:
      Description: "CloudFront distribution URL"
      Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    
    S3BucketName:
      Description: "S3 bucket for frontend"
      Value: !Ref FrontendBucket 